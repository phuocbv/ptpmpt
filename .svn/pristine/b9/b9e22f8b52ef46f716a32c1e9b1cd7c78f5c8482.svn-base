/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.dao;

import java.util.List;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;
import project.DO.ShareCourse;
import project.config.SQL;

/**
 *
 * @author DA CUOI
 */
public class ShareCourseDAO {

    public static int addShareCourse(ShareCourse shareCourse) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        int shareCourseID = -1;
        try {
            tx = session.beginTransaction();
            shareCourseID = (Integer) session.save(shareCourse);
            tx.commit();
        } catch (HibernateException e) {
            if (tx != null) {
                tx.rollback();
            }
            e.printStackTrace();
        } finally {
            session.close();
        }
        return shareCourseID;
    }

    /**
     *
     * @param idaccount
     * @param idcourse
     * @return
     */
    public static ShareCourse getShareCouseByIdAccountAndIdCourseAdmin(int idaccount, int idcourse) {
        ShareCourse result = null;
        Session session = HibernateUtil.getSessionFactory().openSession();
        //Session session = new Configuration().configure().buildSessionFactory().openSession();
        Transaction tx = null;
        try {
            tx = session.beginTransaction();
            Query query = session.createQuery(SQL.GET_SHARE_COURSE_BY_IDACCOUNT_AND_IDCOURSE);
            query.setParameter("id_course", idcourse);
            query.setParameter("id_account_share", idaccount);
            query.setParameter("id_account_use", idaccount);
            query.setParameter("id_account_create", idaccount);
            List list = query.list();
            if (list != null && list.size() > 0) {
                result = (ShareCourse) list.get(0);
            }
            tx.commit();
        } catch (HibernateException e) {
            if (tx != null) {
                tx.rollback();
            }
            e.printStackTrace();
        } finally {
            session.close();
        }
        return result;
    }
}
